//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
// 
// Este código fuente fue generado automáticamente por xsd, Versión=4.0.30319.33440.
// 
using System;
using System.IO;
using System.Text;
using System.Xml;
using System.Xml.Serialization;

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.sat.gob.mx/nomina12", IsNullable = false)]
    public partial class Nomina {

        [XmlAttribute("schemaLocation", Namespace = "http://www.w3.org/2001/XMLSchema-instance")]
        public string XsiSchemaLocation;

        private NominaEmisor emisorField;

        private NominaReceptor receptorField;

        private NominaPercepciones percepcionesField;

        private NominaDeducciones deduccionesField;

        private NominaOtroPago[] otrosPagosField;

        private NominaIncapacidad[] incapacidadesField;

        private string versionField;

        private string tipoNominaField; //c_TipoNomina

        private System.DateTime fechaPagoField;

        private System.DateTime fechaInicialPagoField;

        private System.DateTime fechaFinalPagoField;

        private decimal numDiasPagadosField;

        private decimal totalPercepcionesField;

        private bool totalPercepcionesFieldSpecified;

        private decimal totalDeduccionesField;

        private bool totalDeduccionesFieldSpecified;

        private decimal totalOtrosPagosField;

        private bool totalOtrosPagosFieldSpecified;

        private static XmlSerializer objSerializer;

        public Nomina() {
            this.versionField = "1.2";
        }

        /// <summary>
        /// Nodo condicional para expresar la información del contribuyente emisor del comprobante de nómina.
        /// </summary>
        public NominaEmisor Emisor {
            get {
                return this.emisorField;
            }
            set {
                this.emisorField = value;
            }
        }

        /// <summary>
        /// Nodo requerido para precisar la información del contribuyente receptor del comprobante de nómina.
        /// </summary>
        public NominaReceptor Receptor {
            get {
                return this.receptorField;
            }
            set {
                this.receptorField = value;
            }
        }

        /// <summary>
        /// Nodo condicional para expresar las percepciones aplicables.
        /// </summary>
        public NominaPercepciones Percepciones {
            get {
                return this.percepcionesField;
            }
            set {
                this.percepcionesField = value;
            }
        }

        /// <summary>
        /// Nodo opcional para expresar las deducciones aplicables.
        /// </summary>
        public NominaDeducciones Deducciones {
            get {
                return this.deduccionesField;
            }
            set {
                this.deduccionesField = value;
            }
        }

        /// <summary>
        /// Nodo condicional para expresar otros pagos aplicables.
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("OtroPago", IsNullable = false)]
        public NominaOtroPago[] OtrosPagos {
            get {
                return this.otrosPagosField;
            }
            set {
                this.otrosPagosField = value;
            }
        }

        /// <summary>
        /// Nodo condicional para expresar información de las incapacidades.
        /// </summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("Incapacidad", IsNullable = false)]
        public NominaIncapacidad[] Incapacidades {
            get {
                return this.incapacidadesField;
            }
            set {
                this.incapacidadesField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la expresión de la versión del complemento.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para indicar el tipo de nómina, puede ser O= Nómina ordinaria o E= Nómina extraordinaria.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoNomina {
            get {
                return this.tipoNominaField;
            }
            set {
                this.tipoNominaField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la expresión de la fecha efectiva de erogación del gasto. Se expresa en la forma AAAA-MM-DD, de acuerdo con la especificación ISO 8601.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime FechaPago {
            get {
                return this.fechaPagoField;
            }
            set {
                this.fechaPagoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la expresión de la fecha inicial del período de pago. Se expresa en la forma AAAA-MM-DD, de acuerdo con la especificación ISO 8601.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime FechaInicialPago {
            get {
                return this.fechaInicialPagoField;
            }
            set {
                this.fechaInicialPagoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la expresión de la fecha final del período de pago. Se expresa en la forma AAAA-MM-DD, de acuerdo con la especificación ISO 8601.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime FechaFinalPago {
            get {
                return this.fechaFinalPagoField;
            }
            set {
                this.fechaFinalPagoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la expresión del número o la fracción de días pagados.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal NumDiasPagados {
            get {
                return this.numDiasPagadosField;
            }
            set {
                this.numDiasPagadosField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para representar la suma de las percepciones.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalPercepciones {
            get {
                return this.totalPercepcionesField;
            }
            set {
                this.totalPercepcionesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalPercepcionesSpecified {
            get {
                return this.totalPercepcionesFieldSpecified;
            }
            set {
                this.totalPercepcionesFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para representar la suma de las deducciones aplicables.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalDeducciones {
            get {
                return this.totalDeduccionesField;
            }
            set {
                this.totalDeduccionesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalDeduccionesSpecified {
            get {
                return this.totalDeduccionesFieldSpecified;
            }
            set {
                this.totalDeduccionesFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para representar la suma de otros pagos.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalOtrosPagos {
            get {
                return this.totalOtrosPagosField;
            }
            set {
                this.totalOtrosPagosField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalOtrosPagosSpecified {
            get {
                return this.totalOtrosPagosFieldSpecified;
            }
            set {
                this.totalOtrosPagosFieldSpecified = value;
            }
        }

        private static XmlSerializer Serializer {
            get {
                if (Nomina.objSerializer == null) {
                    Nomina.objSerializer = (new XmlSerializerFactory()).CreateSerializer(typeof(Nomina));
                }
                return Nomina.objSerializer;
            }
        }

        public static bool Deserialize(string input, out Nomina obj, out Exception exception) {
            bool flag;
            exception = null;
            obj = null;
            try {
                obj = Nomina.Deserialize(input);
                flag = true;
            } catch (Exception ex) {
                Console.WriteLine(ex.Message);
                flag = false;
            }
            return flag;
        }

        public static bool Deserialize(string input, out Nomina obj) {
            Exception exception = new Exception();
            return Nomina.Deserialize(input, out obj, out exception);
        }

        public static Nomina Deserialize(string input) {
            StringReader objStringReader = new StringReader(input);
            Nomina objNomina = (Nomina)Nomina.Serializer.Deserialize(XmlReader.Create(objStringReader));
            return objNomina;
        }

        public static Nomina Deserialize(Stream s) {
            return (Nomina)Nomina.Serializer.Deserialize(s);
        }

        public static bool LoadFromFile(string fileName, Encoding encoding, out Nomina obj, out Exception exception) {
            bool flag;
            exception = null;
            obj = null;
            try {
                obj = Nomina.LoadFromFile(fileName, encoding);
                flag = true;
            } catch (Exception ex) {
                Console.WriteLine(ex.Message);
                flag = false;
            }
            return flag;
        }

        public static bool LoadFromFile(string fileName, out Nomina obj, out Exception exception) {
            return Nomina.LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out Nomina obj) {
            Exception exception = new Exception();
            return Nomina.LoadFromFile(fileName, out obj, out exception);
        }

        public static Nomina LoadFromFile(string fileName) {
            return Nomina.LoadFromFile(fileName, Encoding.UTF8);
        }

        public static Nomina LoadFromFile(string fileName, Encoding encoding) {
            Nomina objnomina;
            FileStream fileStream = null;
            StreamReader streamReader = null;
            try {
                fileStream = new FileStream(fileName, FileMode.Open, FileAccess.Read);
                streamReader = new StreamReader(fileStream, encoding);
                string end = streamReader.ReadToEnd();
                streamReader.Close();
                fileStream.Close();
                objnomina = Nomina.Deserialize(end);
            } finally {
                if (fileStream != null) {
                    fileStream.Dispose();
                }
                if (streamReader != null) {
                    streamReader.Dispose();
                }
            }
            return objnomina;
        }

        public virtual bool SaveToFile(string fileName, Encoding encoding, out Exception exception) {
            bool flag;
            exception = null;
            try {
                this.SaveToFile(fileName, encoding);
                flag = true;
            } catch (Exception ex) {
                Console.WriteLine(ex.Message);
                flag = false;
            }
            return flag;
        }

        public virtual bool SaveToFile(string fileName, out Exception exception) {
            return this.SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName) {
            this.SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, Encoding encoding) {
            string objString = this.Serialize(encoding);
            StreamWriter oStreamWriter = new StreamWriter(fileName, false, Encoding.UTF8);
            oStreamWriter.WriteLine(objString);
            oStreamWriter.Close();
        }

        public virtual string Serialize(Encoding encoding) {
            string end;
            StreamReader streamReader = null;
            MemoryStream memoryStream = null;
            try {
                memoryStream = new MemoryStream();
                XmlWriterSettings xmlWriterSetting = new XmlWriterSettings() {
                    Encoding = encoding,
                    Indent = true
                };
                XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSetting);
                XmlSerializerNamespaces xmlSerializerNamespace = new XmlSerializerNamespaces();
                xmlSerializerNamespace.Add("nomina12", "http://www.sat.gob.mx/nomina12");
                xmlSerializerNamespace.Add("xsi", "http://www.w3.org/2001/XMLSchema-instance");
                this.XsiSchemaLocation = "http://www.sat.gob.mx/nomina12 http://www.sat.gob.mx/informacion_fiscal/factura_electronica/Documents/Complementoscfdi/nomina12.xsd";
                Nomina.Serializer.Serialize(xmlWriter, this, xmlSerializerNamespace);
                memoryStream.Seek((long)0, SeekOrigin.Begin);
                streamReader = new StreamReader(memoryStream, encoding);
                end = streamReader.ReadToEnd();
            } finally {
                if (streamReader != null) {
                    streamReader.Dispose();
                }
                if (memoryStream != null) {
                    memoryStream.Dispose();
                }
            }
            return end;
        }

        public virtual string Serialize() {
            return this.Serialize(Encoding.UTF8);
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar la información del contribuyente emisor del comprobante de nómina.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaEmisor {
        private NominaEmisorEntidadSNCF entidadSNCFField;

        private string curpField;

        private string registroPatronalField;

        private string rfcPatronOrigenField;

        /// <summary>
        /// Nodo condicional para que las entidades adheridas al Sistema Nacional de Coordinación Fiscal realicen la identificación del origen de los recursos utilizados en el pago de 
        /// nómina del personal que presta o desempeña un servicio personal subordinado en las dependencias de la entidad federativa, del municipio o demarcación territorial de la Ciudad 
        /// de México, así como en sus respectivos organismos autónomos y entidades paraestatales y paramunicipales
        /// </summary>
        public NominaEmisorEntidadSNCF EntidadSNCF {
            get {
                return this.entidadSNCFField;
            }
            set {
                this.entidadSNCFField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar la CURP del emisor del comprobante de nómina cuando es una persona física.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Curp {
            get {
                return this.curpField;
            }
            set {
                this.curpField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el registro patronal, clave de ramo - pagaduría o la que le asigne la institución de seguridad social al patrón, a 20 posiciones máximo. 
        /// Se debe ingresar cuando se cuente con él, o se esté obligado conforme a otras disposiciones distintas a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RegistroPatronal {
            get {
                return this.registroPatronalField;
            }
            set {
                this.registroPatronalField = value;
            }
        }

        /// <summary>
        /// Atributo opcional para expresar el RFC de la persona que fungió como patrón cuando el pago al trabajador se realice a través de un tercero como vehículo o herramienta de pago.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RfcPatronOrigen {
            get {
                return this.rfcPatronOrigenField;
            }
            set {
                this.rfcPatronOrigenField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para que las entidades adheridas al Sistema Nacional de Coordinación Fiscal realicen la identificación del origen de los recursos utilizados en el pago de 
    /// nómina del personal que presta o desempeña un servicio personal subordinado en las dependencias de la entidad federativa, del municipio o demarcación territorial de la Ciudad 
    /// de México, así como en sus respectivos organismos autónomos y entidades paraestatales y paramunicipales
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaEmisorEntidadSNCF {
        private string origenRecursoField; //c_OrigenRecurso

        private decimal montoRecursoPropioField;

        private bool montoRecursoPropioFieldSpecified;

        /// <summary>
        /// Atributo requerido para identificar el origen del recurso utilizado para el pago de nómina del personal que presta o desempeña un servicio personal subordinado o asimilado a salarios en las dependencias.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OrigenRecurso {
            get {
                return this.origenRecursoField;
            }
            set {
                this.origenRecursoField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el monto del recurso pagado con cargo a sus participaciones u otros ingresos locales (importe bruto de los ingresos propios, es decir total de gravados y exentos), cuando el origen es mixto.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal MontoRecursoPropio {
            get {
                return this.montoRecursoPropioField;
            }
            set {
                this.montoRecursoPropioField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MontoRecursoPropioSpecified {
            get {
                return this.montoRecursoPropioFieldSpecified;
            }
            set {
                this.montoRecursoPropioFieldSpecified = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo requerido para precisar la información del contribuyente receptor del comprobante de nómina.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaReceptor {
        private NominaReceptorSubContratacion[] subContratacionField;

        private string curpField;

        private string numSeguridadSocialField;

        private System.DateTime fechaInicioRelLaboralField;

        private bool fechaInicioRelLaboralFieldSpecified;

        private string antigüedadField;

        private string tipoContratoField; //c_TipoContrato

        private NominaReceptorSindicalizado sindicalizadoField;

        private bool sindicalizadoFieldSpecified;

        private string tipoJornadaField; //c_TipoJornada

        private bool tipoJornadaFieldSpecified;

        private string tipoRegimenField; //c_TipoRegimen

        private string numEmpleadoField;

        private string departamentoField;

        private string puestoField;

        private string riesgoPuestoField; //c_RiesgoPuesto

        private bool riesgoPuestoFieldSpecified;

        private string periodicidadPagoField; //c_PeriodicidadPago

        private string bancoField; //c_Banco

        private bool bancoFieldSpecified;

        private string cuentaBancariaField;

        private decimal salarioBaseCotAporField;

        private bool salarioBaseCotAporFieldSpecified;

        private decimal salarioDiarioIntegradoField;

        private bool salarioDiarioIntegradoFieldSpecified;

        private string claveEntFedField; //c_Estado

        /// <summary>
        /// Nodo condicional para expresar la lista de las personas que los subcontrataron.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("SubContratacion")]
        public NominaReceptorSubContratacion[] SubContratacion {
            get {
                return this.subContratacionField;
            }
            set {
                this.subContratacionField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar la CURP del receptor del comprobante de nómina.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Curp {
            get {
                return this.curpField;
            }
            set {
                this.curpField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el número de seguridad social del trabajador. Se debe ingresar cuando se cuente con él, o se esté obligado conforme a otras disposiciones distintas a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumSeguridadSocial {
            get {
                return this.numSeguridadSocialField;
            }
            set {
                this.numSeguridadSocialField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar la fecha de inicio de la relación laboral entre el empleador y el empleado. Se expresa en la forma AAAA-MM-DD, de acuerdo con la especificación ISO 8601. Se debe 
        /// ingresar cuando se cuente con él, o se esté obligado conforme a otras disposiciones distintas a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "date")]
        public System.DateTime FechaInicioRelLaboral {
            get {
                return this.fechaInicioRelLaboralField;
            }
            set {
                this.fechaInicioRelLaboralField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FechaInicioRelLaboralSpecified {
            get {
                return this.fechaInicioRelLaboralFieldSpecified;
            }
            set {
                this.fechaInicioRelLaboralFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el número de semanas o el periodo de años, meses y días que el empleado ha mantenido relación laboral con el empleador. Se debe ingresar cuando se cuente con él, 
        /// o se esté obligado conforme a otras disposiciones distintas a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Antigüedad {
            get {
                return this.antigüedadField;
            }
            set {
                this.antigüedadField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el tipo de contrato que tiene el trabajador.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoContrato {
            get {
                return this.tipoContratoField;
            }
            set {
                this.tipoContratoField = value;
            }
        }

        /// <summary>
        /// Atributo opcional para indicar si el trabajador está asociado a un sindicato. Si se omite se asume que no está asociado a algún sindicato.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public NominaReceptorSindicalizado Sindicalizado {
            get {
                return this.sindicalizadoField;
            }
            set {
                this.sindicalizadoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SindicalizadoSpecified {
            get {
                return this.sindicalizadoFieldSpecified;
            }
            set {
                this.sindicalizadoFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el tipo de jornada que cubre el trabajador. Se debe ingresar cuando se esté obligado conforme a otras disposiciones distintas a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoJornada {
            get {
                return this.tipoJornadaField;
            }
            set {
                this.tipoJornadaField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TipoJornadaSpecified {
            get {
                return this.tipoJornadaFieldSpecified;
            }
            set {
                this.tipoJornadaFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la expresión de la clave del régimen por el cual se tiene contratado al trabajador.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoRegimen {
            get {
                return this.tipoRegimenField;
            }
            set {
                this.tipoRegimenField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el número de empleado de 1 a 15 posiciones.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumEmpleado {
            get {
                return this.numEmpleadoField;
            }
            set {
                this.numEmpleadoField = value;
            }
        }

        /// <summary>
        /// Atributo opcional para la expresión del departamento o área a la que pertenece el trabajador.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Departamento {
            get {
                return this.departamentoField;
            }
            set {
                this.departamentoField = value;
            }
        }

        /// <summary>
        /// Atributo opcional para la expresión del puesto asignado al empleado o actividad que realiza.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Puesto {
            get {
                return this.puestoField;
            }
            set {
                this.puestoField = value;
            }
        }

        /// <summary>
        /// Atributo opcional para expresar la clave conforme a la Clase en que deben inscribirse los patrones, de acuerdo con las actividades que desempeñan sus trabajadores, 
        /// según lo previsto en el artículo 196 del Reglamento en Materia de Afiliación Clasificación de Empresas, Recaudación y Fiscalización, o conforme con la normatividad 
        /// del Instituto de Seguridad Social del trabajador.  Se debe ingresar cuando se cuente con él, o se esté obligado conforme a otras disposiciones distintas a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RiesgoPuesto {
            get {
                return this.riesgoPuestoField;
            }
            set {
                this.riesgoPuestoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RiesgoPuestoSpecified {
            get {
                return this.riesgoPuestoFieldSpecified;
            }
            set {
                this.riesgoPuestoFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la forma en que se establece el pago del salario.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PeriodicidadPago {
            get {
                return this.periodicidadPagoField;
            }
            set {
                this.periodicidadPagoField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para la expresión de la clave del Banco conforme al catálogo, donde se realiza el depósito de nómina.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Banco {
            get {
                return this.bancoField;
            }
            set {
                this.bancoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BancoSpecified {
            get {
                return this.bancoFieldSpecified;
            }
            set {
                this.bancoFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para la expresión de la cuenta bancaria a 11 posiciones o número de teléfono celular a 10 posiciones o número de tarjeta de crédito, débito o 
        /// servicios a 15 ó 16 posiciones o la CLABE a 18 posiciones o número de monedero electrónico, donde se realiza el depósito de nómina.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "integer")]
        public string CuentaBancaria {
            get {
                return this.cuentaBancariaField;
            }
            set {
                this.cuentaBancariaField = value;
            }
        }

        /// <summary>
        /// Atributo opcional para expresar la retribución otorgada al trabajador, que se integra por los pagos hechos en efectivo por cuota diaria, gratificaciones, percepciones, 
        /// alimentación, habitación, primas, comisiones, prestaciones en especie y cualquiera otra cantidad o prestación que se entregue al trabajador por su trabajo, sin considerar 
        /// los conceptos que se excluyen de conformidad con el Artículo 27 de la Ley del Seguro Social, o la integración de los pagos conforme la normatividad del Instituto de Seguridad 
        /// Social del trabajador. (Se emplea para pagar las cuotas y aportaciones de Seguridad Social). Se debe ingresar cuando se esté obligado conforme a otras disposiciones distintas 
        /// a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal SalarioBaseCotApor {
            get {
                return this.salarioBaseCotAporField;
            }
            set {
                this.salarioBaseCotAporField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarioBaseCotAporSpecified {
            get {
                return this.salarioBaseCotAporFieldSpecified;
            }
            set {
                this.salarioBaseCotAporFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo opcional para expresar el salario que se integra con los pagos hechos en efectivo por cuota diaria, gratificaciones, percepciones, habitación, primas, comisiones, 
        /// prestaciones en especie y cualquier otra cantidad o prestación que se entregue al trabajador por su trabajo, de conformidad con el Art. 84 de la Ley Federal del Trabajo. 
        /// (Se utiliza para el cálculo de las indemnizaciones). Se debe ingresar cuando se esté obligado conforme a otras disposiciones distintas a las fiscales.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal SalarioDiarioIntegrado {
            get {
                return this.salarioDiarioIntegradoField;
            }
            set {
                this.salarioDiarioIntegradoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SalarioDiarioIntegradoSpecified {
            get {
                return this.salarioDiarioIntegradoFieldSpecified;
            }
            set {
                this.salarioDiarioIntegradoFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar la clave de la entidad federativa en donde el receptor del recibo prestó el servicio.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClaveEntFed {
            get {
                return this.claveEntFedField;
            }
            set {
                this.claveEntFedField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar la lista de las personas que los subcontrataron.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaReceptorSubContratacion {
        private string rfcLaboraField;

        private decimal porcentajeTiempoField;

        /// <summary>
        /// Atributo requerido para expresar el RFC de la persona que subcontrata.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RfcLabora {
            get {
                return this.rfcLaboraField;
            }
            set {
                this.rfcLaboraField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el porcentaje del tiempo que prestó sus servicios con el RFC que lo subcontrata.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal PorcentajeTiempo {
            get {
                return this.porcentajeTiempoField;
            }
            set {
                this.porcentajeTiempoField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar las percepciones aplicables.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaPercepciones {
        private NominaPercepcionesPercepcion[] percepcionField;

        private NominaPercepcionesJubilacionPensionRetiro jubilacionPensionRetiroField;

        private NominaPercepcionesSeparacionIndemnizacion separacionIndemnizacionField;

        private decimal totalSueldosField;

        private bool totalSueldosFieldSpecified;

        private decimal totalSeparacionIndemnizacionField;

        private bool totalSeparacionIndemnizacionFieldSpecified;

        private decimal totalJubilacionPensionRetiroField;

        private bool totalJubilacionPensionRetiroFieldSpecified;

        private decimal totalGravadoField;

        private decimal totalExentoField;

        /// <summary>
        /// Nodo requerido para expresar la información detallada de una percepción
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Percepcion")]
        public NominaPercepcionesPercepcion[] Percepcion {
            get {
                return this.percepcionField;
            }
            set {
                this.percepcionField = value;
            }
        }

        /// <summary>
        /// Nodo condicional para expresar la información detallada de pagos por jubilación, pensiones o haberes de retiro.
        /// </summary>
        public NominaPercepcionesJubilacionPensionRetiro JubilacionPensionRetiro {
            get {
                return this.jubilacionPensionRetiroField;
            }
            set {
                this.jubilacionPensionRetiroField = value;
            }
        }

        /// <summary>
        /// Nodo condicional para expresar la información detallada de otros pagos por separación.
        /// </summary>
        public NominaPercepcionesSeparacionIndemnizacion SeparacionIndemnizacion {
            get {
                return this.separacionIndemnizacionField;
            }
            set {
                this.separacionIndemnizacionField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el total de percepciones brutas (gravadas y exentas) por sueldos y salarios y conceptos asimilados a salarios.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalSueldos {
            get {
                return this.totalSueldosField;
            }
            set {
                this.totalSueldosField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSueldosSpecified {
            get {
                return this.totalSueldosFieldSpecified;
            }
            set {
                this.totalSueldosFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el importe exento y gravado de las claves tipo percepción 022 Prima por Antigüedad, 023 Pagos por separación y 025 Indemnizaciones.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalSeparacionIndemnizacion {
            get {
                return this.totalSeparacionIndemnizacionField;
            }
            set {
                this.totalSeparacionIndemnizacionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSeparacionIndemnizacionSpecified {
            get {
                return this.totalSeparacionIndemnizacionFieldSpecified;
            }
            set {
                this.totalSeparacionIndemnizacionFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el importe exento y gravado de las claves tipo percepción 039 Jubilaciones, pensiones o haberes de retiro en una exhibición y 
        /// 044 Jubilaciones, pensiones o haberes de retiro en parcialidades.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalJubilacionPensionRetiro {
            get {
                return this.totalJubilacionPensionRetiroField;
            }
            set {
                this.totalJubilacionPensionRetiroField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalJubilacionPensionRetiroSpecified {
            get {
                return this.totalJubilacionPensionRetiroFieldSpecified;
            }
            set {
                this.totalJubilacionPensionRetiroFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el total de percepciones gravadas que se relacionan en el comprobante.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalGravado {
            get {
                return this.totalGravadoField;
            }
            set {
                this.totalGravadoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el total de percepciones exentas que se relacionan en el comprobante.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalExento {
            get {
                return this.totalExentoField;
            }
            set {
                this.totalExentoField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo requerido para expresar la información detallada de una percepción
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaPercepcionesPercepcion {
        private NominaPercepcionesPercepcionAccionesOTitulos accionesOTitulosField;

        private NominaPercepcionesPercepcionHorasExtra[] horasExtraField;

        private string tipoPercepcionField; //c_TipoPercepcion

        private string claveField;

        private string conceptoField;

        private decimal importeGravadoField;

        private decimal importeExentoField;

        /// <summary>
        /// Nodo condicional para expresar ingresos por acciones o títulos valor que representan bienes. Se vuelve requerido cuando existan ingresos por sueldos derivados 
        /// de adquisición de acciones o títulos (Art. 94, fracción VII LISR).
        /// </summary>
        public NominaPercepcionesPercepcionAccionesOTitulos AccionesOTitulos {
            get {
                return this.accionesOTitulosField;
            }
            set {
                this.accionesOTitulosField = value;
            }
        }

        /// <summary>
        /// Nodo condicional para expresar las horas extra aplicables.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("HorasExtra")]
        public NominaPercepcionesPercepcionHorasExtra[] HorasExtra {
            get {
                return this.horasExtraField;
            }
            set {
                this.horasExtraField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar la Clave agrupadora bajo la cual se clasifica la percepción.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoPercepcion {
            get {
                return this.tipoPercepcionField;
            }
            set {
                this.tipoPercepcionField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar la clave de percepción de nómina propia de la contabilidad de cada patrón, puede conformarse desde 3 hasta 15 caracteres.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Clave {
            get {
                return this.claveField;
            }
            set {
                this.claveField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la descripción del concepto de percepción
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Concepto {
            get {
                return this.conceptoField;
            }
            set {
                this.conceptoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido, representa el importe gravado de un concepto de percepción.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ImporteGravado {
            get {
                return this.importeGravadoField;
            }
            set {
                this.importeGravadoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido, representa el importe exento de un concepto de percepción.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ImporteExento {
            get {
                return this.importeExentoField;
            }
            set {
                this.importeExentoField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// /// <summary>
    /// Nodo condicional para expresar ingresos por acciones o títulos valor que representan bienes. Se vuelve requerido cuando existan ingresos por sueldos derivados 
    /// de adquisición de acciones o títulos (Art. 94, fracción VII LISR).
    /// </summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaPercepcionesPercepcionAccionesOTitulos {
        private decimal valorMercadoField;

        private decimal precioAlOtorgarseField;

        /// <summary>
        /// Atributo requerido para expresar el valor de mercado de las Acciones o Títulos valor al ejercer la opción.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ValorMercado {
            get {
                return this.valorMercadoField;
            }
            set {
                this.valorMercadoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el precio establecido al otorgarse la opción de ingresos en acciones o títulos valor.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal PrecioAlOtorgarse {
            get {
                return this.precioAlOtorgarseField;
            }
            set {
                this.precioAlOtorgarseField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar las horas extra aplicables.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaPercepcionesPercepcionHorasExtra {
        private int diasField;

        private string tipoHorasField; //c_TipoHoras

        private int horasExtraField;

        private decimal importePagadoField;

        /// <summary>
        /// Atributo requerido para expresar el número de días en que el trabajador realizó horas extra en el periodo.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Dias {
            get {
                return this.diasField;
            }
            set {
                this.diasField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el tipo de pago de las horas extra.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoHoras {
            get {
                return this.tipoHorasField;
            }
            set {
                this.tipoHorasField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el número de horas extra trabajadas en el periodo.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int HorasExtra {
            get {
                return this.horasExtraField;
            }
            set {
                this.horasExtraField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el importe pagado por las horas extra.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ImportePagado {
            get {
                return this.importePagadoField;
            }
            set {
                this.importePagadoField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar la información detallada de pagos por jubilación, pensiones o haberes de retiro.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaPercepcionesJubilacionPensionRetiro {
        private decimal totalUnaExhibicionField;

        private bool totalUnaExhibicionFieldSpecified;

        private decimal totalParcialidadField;

        private bool totalParcialidadFieldSpecified;

        private decimal montoDiarioField;

        private bool montoDiarioFieldSpecified;

        private decimal ingresoAcumulableField;

        private decimal ingresoNoAcumulableField;

        /// <summary>
        /// Atributo condicional que indica el monto total del pago cuando se realiza en una sola exhibición.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalUnaExhibicion {
            get {
                return this.totalUnaExhibicionField;
            }
            set {
                this.totalUnaExhibicionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalUnaExhibicionSpecified {
            get {
                return this.totalUnaExhibicionFieldSpecified;
            }
            set {
                this.totalUnaExhibicionFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar los ingresos totales por pago cuando se hace en parcialidades.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalParcialidad {
            get {
                return this.totalParcialidadField;
            }
            set {
                this.totalParcialidadField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalParcialidadSpecified {
            get {
                return this.totalParcialidadFieldSpecified;
            }
            set {
                this.totalParcialidadFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el monto diario percibido por jubilación, pensiones o haberes de retiro cuando se realiza en parcialidades.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal MontoDiario {
            get {
                return this.montoDiarioField;
            }
            set {
                this.montoDiarioField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MontoDiarioSpecified {
            get {
                return this.montoDiarioFieldSpecified;
            }
            set {
                this.montoDiarioFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar los ingresos acumulables.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal IngresoAcumulable {
            get {
                return this.ingresoAcumulableField;
            }
            set {
                this.ingresoAcumulableField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar los ingresos no acumulables.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal IngresoNoAcumulable {
            get {
                return this.ingresoNoAcumulableField;
            }
            set {
                this.ingresoNoAcumulableField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar la información detallada de otros pagos por separación.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaPercepcionesSeparacionIndemnizacion {
        private decimal totalPagadoField;

        private int numAñosServicioField;

        private decimal ultimoSueldoMensOrdField;

        private decimal ingresoAcumulableField;

        private decimal ingresoNoAcumulableField;

        /// <summary>
        /// Atributo requerido que indica el monto total del pago.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalPagado {
            get {
                return this.totalPagadoField;
            }
            set {
                this.totalPagadoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el número de años de servicio del trabajador. Se redondea al entero superior si la cifra contiene años y meses y hay más de 6 meses.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int NumAñosServicio {
            get {
                return this.numAñosServicioField;
            }
            set {
                this.numAñosServicioField = value;
            }
        }

        /// <summary>
        /// Atributo requerido que indica el último sueldo mensual ordinario.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal UltimoSueldoMensOrd {
            get {
                return this.ultimoSueldoMensOrdField;
            }
            set {
                this.ultimoSueldoMensOrdField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar los ingresos acumulables.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal IngresoAcumulable {
            get {
                return this.ingresoAcumulableField;
            }
            set {
                this.ingresoAcumulableField = value;
            }
        }

        /// <summary>
        /// Atributo requerido que indica los ingresos no acumulables.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal IngresoNoAcumulable {
            get {
                return this.ingresoNoAcumulableField;
            }
            set {
                this.ingresoNoAcumulableField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo opcional para expresar las deducciones aplicables.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaDeducciones {
        private NominaDeduccionesDeduccion[] deduccionField;

        private decimal totalOtrasDeduccionesField;

        private bool totalOtrasDeduccionesFieldSpecified;

        private decimal totalImpuestosRetenidosField;

        private bool totalImpuestosRetenidosFieldSpecified;

        /// <summary>
        /// Nodo requerido para expresar la información detallada de una deducción.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Deduccion")]
        public NominaDeduccionesDeduccion[] Deduccion {
            get {
                return this.deduccionField;
            }
            set {
                this.deduccionField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el total de deducciones que se relacionan en el comprobante, donde la clave de tipo de deducción sea distinta a la 002 correspondiente a ISR.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalOtrasDeducciones {
            get {
                return this.totalOtrasDeduccionesField;
            }
            set {
                this.totalOtrasDeduccionesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalOtrasDeduccionesSpecified {
            get {
                return this.totalOtrasDeduccionesFieldSpecified;
            }
            set {
                this.totalOtrasDeduccionesFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el total de los impuestos federales retenidos, es decir, donde la clave de tipo de deducción sea 002 correspondiente a ISR.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalImpuestosRetenidos {
            get {
                return this.totalImpuestosRetenidosField;
            }
            set {
                this.totalImpuestosRetenidosField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalImpuestosRetenidosSpecified {
            get {
                return this.totalImpuestosRetenidosFieldSpecified;
            }
            set {
                this.totalImpuestosRetenidosFieldSpecified = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo requerido para expresar la información detallada de una deducción.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaDeduccionesDeduccion {
        private string tipoDeduccionField; //c_TipoDeduccion

        private string claveField;

        private string conceptoField;

        private decimal importeField;

        /// <summary>
        /// Atributo requerido para registrar la clave agrupadora que clasifica la deducción.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoDeduccion {
            get {
                return this.tipoDeduccionField;
            }
            set {
                this.tipoDeduccionField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la clave de deducción de nómina propia de la contabilidad de cada patrón, puede conformarse desde 3 hasta 15 caracteres.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Clave {
            get {
                return this.claveField;
            }
            set {
                this.claveField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la descripción del concepto de deducción.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Concepto {
            get {
                return this.conceptoField;
            }
            set {
                this.conceptoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para registrar el importe del concepto de deducción.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo requerido para expresar la información detallada del otro pago
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaOtroPago {
        private NominaOtroPagoSubsidioAlEmpleo subsidioAlEmpleoField;

        private NominaOtroPagoCompensacionSaldosAFavor compensacionSaldosAFavorField;

        private string tipoOtroPagoField; //c_TipoOtroPago

        private string claveField;

        private string conceptoField;

        private decimal importeField;

        /// <summary>
        /// Nodo condicional para expresar la información referente al subsidio al empleo del trabajador.
        /// </summary>
        public NominaOtroPagoSubsidioAlEmpleo SubsidioAlEmpleo {
            get {
                return this.subsidioAlEmpleoField;
            }
            set {
                this.subsidioAlEmpleoField = value;
            }
        }

        /// <summary>
        /// Nodo condicional para expresar la información referente a la compensación de saldos a favor de un trabajador.
        /// </summary>
        public NominaOtroPagoCompensacionSaldosAFavor CompensacionSaldosAFavor {
            get {
                return this.compensacionSaldosAFavorField;
            }
            set {
                this.compensacionSaldosAFavorField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar la clave agrupadora bajo la cual se clasifica el otro pago.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoOtroPago {
            get {
                return this.tipoOtroPagoField;
            }
            set {
                this.tipoOtroPagoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido, representa la clave de otro pago de nómina propia de la contabilidad de cada patrón, puede conformarse desde 3 hasta 15 caracteres.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Clave {
            get {
                return this.claveField;
            }
            set {
                this.claveField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para la descripción del concepto de otro pago.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Concepto {
            get {
                return this.conceptoField;
            }
            set {
                this.conceptoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el importe del concepto de otro pago.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar la información referente al subsidio al empleo del trabajador.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaOtroPagoSubsidioAlEmpleo {
        private decimal subsidioCausadoField;

        /// <summary>
        /// Atributo requerido para expresar el subsidio causado conforme a la tabla del subsidio para el empleo publicada en el Anexo 8 de la RMF vigente.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal SubsidioCausado {
            get {
                return this.subsidioCausadoField;
            }
            set {
                this.subsidioCausadoField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo condicional para expresar la información referente a la compensación de saldos a favor de un trabajador.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaOtroPagoCompensacionSaldosAFavor {
        private decimal saldoAFavorField;

        private short añoField;

        private decimal remanenteSalFavField;

        /// <summary>
        /// Atributo requerido para expresar el saldo a favor determinado por el patrón al trabajador en periodos o ejercicios anteriores.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal SaldoAFavor {
            get {
                return this.saldoAFavorField;
            }
            set {
                this.saldoAFavorField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el año en que se determinó el saldo a favor del trabajador por el patrón que se incluye en el campo “RemanenteSalFav”
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short Año {
            get {
                return this.añoField;
            }
            set {
                this.añoField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar el remanente del saldo a favor del trabajador.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal RemanenteSalFav {
            get {
                return this.remanenteSalFavField;
            }
            set {
                this.remanenteSalFavField = value;
            }
        }
    }
}

namespace Jaeger.SAT.CFDI.Complemento.Nomina.V12 {
    /// <summary>
    /// Nodo requerido para expresar información de las incapacidades
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/nomina12")]
    public partial class NominaIncapacidad {
        private int diasIncapacidadField;

        private string tipoIncapacidadField; //c_TipoIncapacidad

        private decimal importeMonetarioField;

        private bool importeMonetarioFieldSpecified;

        /// <summary>
        /// Atributo requerido para expresar el número de días enteros que el trabajador se incapacitó en el periodo.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int DiasIncapacidad {
            get {
                return this.diasIncapacidadField;
            }
            set {
                this.diasIncapacidadField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar la razón de la incapacidad.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TipoIncapacidad {
            get {
                return this.tipoIncapacidadField;
            }
            set {
                this.tipoIncapacidadField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el monto del importe monetario de la incapacidad.
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ImporteMonetario {
            get {
                return this.importeMonetarioField;
            }
            set {
                this.importeMonetarioField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImporteMonetarioSpecified {
            get {
                return this.importeMonetarioFieldSpecified;
            }
            set {
                this.importeMonetarioFieldSpecified = value;
            }
        }
    }
}