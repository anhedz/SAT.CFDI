//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
// 
// Este código fuente fue generado automáticamente por xsd, Versión=4.0.30319.33440.
// 

using System;
using System.Reflection;
using System.Xml;
using System.Xml.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Security.Cryptography.X509Certificates;
using System.Security.Cryptography;
using System.Xml.Xsl;
using System.Xml.XPath;
using Jaeger.SAT.CFDI.Services;

namespace Jaeger.SAT.CFDI.V33 {
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    [XmlRootAttribute(Namespace = "http://www.sat.gob.mx/cfd/3", IsNullable = false)]
    public partial class Comprobante {
        [XmlAttribute("schemaLocation", Namespace = "http://www.w3.org/2001/XMLSchema-instance")]
        public string XsiSchemaLocation;

        private ComprobanteCfdiRelacionados cfdiRelacionadosField;

        private ComprobanteEmisor emisorField;

        private ComprobanteReceptor receptorField;

        private ComprobanteConcepto[] conceptosField;

        private ComprobanteImpuestos impuestosField;

        private ComprobanteComplemento complementoField;

        private ComprobanteAddenda addendaField;

        private string versionField;

        private string serieField;

        private string folioField;

        private System.DateTime fechaField;

        private string selloField;

        private string formaPagoField;

        private bool formaPagoFieldSpecified;

        private string noCertificadoField;

        private string certificadoField;

        private string condicionesDePagoField;

        private decimal subTotalField;

        private decimal descuentoField;

        private bool descuentoFieldSpecified;

        private string monedaField;

        private decimal tipoCambioField;

        private bool tipoCambioFieldSpecified;

        private decimal totalField;

        private string tipoDeComprobanteField;

        private string metodoPagoField;

        private bool metodoPagoFieldSpecified;

        private string lugarExpedicionField;

        private string confirmacionField;

        public Comprobante() {
            this.versionField = "3.3";
        }

        /// <summary>
        /// Nodo opcional para precisar la información de los comprobantes relacionados.
        /// </summary>
        public ComprobanteCfdiRelacionados CfdiRelacionados {
            get {
                return this.cfdiRelacionadosField;
            }
            set {
                this.cfdiRelacionadosField = value;
            }
        }

        /// <summary>
        /// Nodo requerido para expresar la información del contribuyente emisor del comprobante.
        /// </summary>
        public ComprobanteEmisor Emisor {
            get {
                return this.emisorField;
            }
            set {
                this.emisorField = value;
            }
        }

        /// <summary>
        /// Nodo requerido para precisar la información del contribuyente receptor del comprobante.
        /// </summary>
        public ComprobanteReceptor Receptor {
            get {
                return this.receptorField;
            }
            set {
                this.receptorField = value;
            }
        }

        /// <comentarios/>
        [XmlArrayItemAttribute("Concepto", IsNullable = false)]
        public ComprobanteConcepto[] Conceptos {
            get {
                return this.conceptosField;
            }
            set {
                this.conceptosField = value;
            }
        }

        /// <comentarios/>
        public ComprobanteImpuestos Impuestos {
            get {
                return this.impuestosField;
            }
            set {
                this.impuestosField = value;
            }
        }

        /// <comentarios/>
        public ComprobanteComplemento Complemento {
            get {
                return this.complementoField;
            }
            set {
                this.complementoField = value;
            }
        }

        /// <comentarios/>
        public ComprobanteAddenda Addenda {
            get {
                return this.addendaField;
            }
            set {
                this.addendaField = value;
            }
        }

        /// <summary>
        /// Atributo requerido con valor prefijado a 3.3 que indica la versión del estándar bajo el que se encuentra expresado el comprobante.
        /// </summary>
        [XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Serie {
            get {
                return this.serieField;
            }
            set {
                this.serieField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Folio {
            get {
                return this.folioField;
            }
            set {
                this.folioField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public System.DateTime Fecha {
            get {
                return this.fechaField;
            }
            set {
                this.fechaField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Sello {
            get {
                return this.selloField;
            }
            set {
                this.selloField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string FormaPago {
            get {
                return this.formaPagoField;
            }
            set {
                this.formaPagoField = value;
            }
        }

        /// <comentarios/>
        [XmlIgnoreAttribute()]
        public bool FormaPagoSpecified {
            get {
                return this.formaPagoFieldSpecified;
            }
            set {
                this.formaPagoFieldSpecified = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string NoCertificado {
            get {
                return this.noCertificadoField;
            }
            set {
                this.noCertificadoField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Certificado {
            get {
                return this.certificadoField;
            }
            set {
                this.certificadoField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string CondicionesDePago {
            get {
                return this.condicionesDePagoField;
            }
            set {
                this.condicionesDePagoField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal SubTotal {
            get {
                return this.subTotalField;
            }
            set {
                this.subTotalField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal Descuento {
            get {
                return this.descuentoField;
            }
            set {
                this.descuentoField = value;
            }
        }

        /// <comentarios/>
        [XmlIgnoreAttribute()]
        public bool DescuentoSpecified {
            get {
                return this.descuentoFieldSpecified;
            }
            set {
                this.descuentoFieldSpecified = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Moneda {
            get {
                return this.monedaField;
            }
            set {
                this.monedaField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal TipoCambio {
            get {
                return this.tipoCambioField;
            }
            set {
                this.tipoCambioField = value;
            }
        }

        /// <comentarios/>
        [XmlIgnoreAttribute()]
        public bool TipoCambioSpecified {
            get {
                return this.tipoCambioFieldSpecified;
            }
            set {
                this.tipoCambioFieldSpecified = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string TipoDeComprobante {
            get {
                return this.tipoDeComprobanteField;
            }
            set {
                this.tipoDeComprobanteField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string MetodoPago {
            get {
                return this.metodoPagoField;
            }
            set {
                this.metodoPagoField = value;
            }
        }

        /// <comentarios/>
        [XmlIgnoreAttribute()]
        public bool MetodoPagoSpecified {
            get {
                return this.metodoPagoFieldSpecified;
            }
            set {
                this.metodoPagoFieldSpecified = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string LugarExpedicion {
            get {
                return this.lugarExpedicionField;
            }
            set {
                this.lugarExpedicionField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Confirmacion {
            get {
                return this.confirmacionField;
            }
            set {
                this.confirmacionField = value;
            }
        }

        #region serializacion

        private static XmlSerializer objSerializer;

        [XmlIgnore]
        public string OriginalXmlString { get; set; }

        private static XmlSerializer Serializer {
            get {
                if (Comprobante.objSerializer == null) {
                    Comprobante.objSerializer = (new XmlSerializerFactory()).CreateSerializer(typeof(Comprobante));
                }
                return Comprobante.objSerializer;
            }
        }

        /// <summary>
        /// Deserialize
        /// </summary>
        public static Comprobante Deserialize(string input) {
            Comprobante objComprobante;
            using (StringReader stringReader = new StringReader(input)) {
                Comprobante objComprobante1 = (Comprobante)Comprobante.Serializer.Deserialize(XmlReader.Create(stringReader));
                objComprobante1.OriginalXmlString = input;
                objComprobante = objComprobante1;
            }
            return objComprobante;
        }

        public static Comprobante Load(string fileName) {
            Comprobante comprobante;
            UTF8Encoding objUtf8WithoutBom = new UTF8Encoding(false);
            try {
                using (FileStream fileStream = new FileStream(fileName, FileMode.Open, FileAccess.Read)) {
                    using (StreamReader streamReader = new StreamReader(fileStream, objUtf8WithoutBom)) {
                        comprobante = Comprobante.Deserialize(streamReader.ReadToEnd());
                    }
                }
                return comprobante;
            } catch (Exception ex) {
                Console.WriteLine(ex.Message);
            }
            return null;
        }

        /// <summary>
        /// cargar
        /// </summary>
        public static Comprobante LoadXml(string xmlString) {
            try {
                return Comprobante.Deserialize(xmlString);
            } catch (Exception ex) {
                Console.WriteLine(string.Concat("V33_LoadXML: ", ex.Message));
                return null;
            }
        }

        /// <summary>
        /// cargar xml de un arreglo de bytes
        /// </summary>
        public static Comprobante LoadBytes(byte[] xmlBytes) {
            Comprobante outComprobante;
            try {
                XmlSerializer xmlSerializer = new XmlSerializer(typeof(Comprobante));
                XmlTextReader xmlTextReader = new XmlTextReader(new MemoryStream(xmlBytes));
                Comprobante t1 = (Comprobante)xmlSerializer.Deserialize(xmlTextReader);
                t1.OriginalXmlString = UTF8Encoding.UTF8.GetString(xmlBytes);
                xmlTextReader.Close();
                outComprobante = t1;
            } catch (Exception ex) {
                Console.WriteLine("CFDIv33: " + ex.Message);
                return null;
            }
            return outComprobante;
        }

        public static Comprobante LoadBase64(string base64) {
            var encodedString = Convert.FromBase64String(base64);
            return LoadBytes(encodedString);
        }

        public static Comprobante Load(Stream input) {
            using (var ms = new MemoryStream()) {
                input.CopyTo(ms);
                return LoadBytes(ms.ToArray());
            }
        }

        public virtual void Save(string fileName) {
            using (StreamWriter streamWriter = new StreamWriter(fileName, false, new UTF8Encoding(false))) {
                streamWriter.WriteLine(this.Serialize());
            }
        }

        public virtual string Serialize() {
            string end;
            List<XmlElement>.Enumerator enumerator = new List<XmlElement>.Enumerator();
            XmlWriterSettings xmlWriterSetting = new XmlWriterSettings() {
                Encoding = Encoding.UTF8,
                Indent = true,
                CloseOutput = false,
                OmitXmlDeclaration = false
            };
            using (MemoryStream memoryStream = new MemoryStream()) {
                XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSetting);
                XmlSerializerNamespaces xmlSerializerNamespace = new XmlSerializerNamespaces();
                xmlSerializerNamespace.Add("cfdi", "http://www.sat.gob.mx/cfd/3");
                xmlSerializerNamespace.Add("xsi", "http://www.w3.org/2001/XMLSchema-instance");
                this.XsiSchemaLocation = "http://www.sat.gob.mx/cfd/3 http://www.sat.gob.mx/sitio_internet/cfd/3/cfdv33.xsd";
                if (this.Complemento != null) {
                    try {
                        enumerator = this.Complemento.Any.GetEnumerator();
                        while (enumerator.MoveNext()) {
                            string name = enumerator.Current.Name;
                            string str = name;
                            if (name != null) {
                                if (str == "nomina12:Nomina") {
                                    xmlSerializerNamespace.Add("nomina12", "http://www.sat.gob.mx/nomina12");
                                    this.XsiSchemaLocation = string.Concat(this.XsiSchemaLocation, " http://www.sat.gob.mx/nomina http://www.sat.gob.mx/sitio_internet/cfd/nomina/nomina12.xsd");
                                } else if (str == "pago10:Pagos") {
                                    xmlSerializerNamespace.Add("pagos10", "http://www.sat.gob.mx/Pagos");
                                    this.XsiSchemaLocation = "http://www.sat.gob.mx/Pagos http://www.sat.gob.mx/sitio_internet/cfd/Pagos/Pagos10.xsd";
                                } else if (str == "implocal:ImpuestosLocales") {
                                    xmlSerializerNamespace.Add("implocal", "http://www.sat.gob.mx/implocal");
                                    this.XsiSchemaLocation = string.Concat(this.XsiSchemaLocation, " http://www.sat.gob.mx/implocal http://www.sat.gob.mx/sitio_internet/cfd/implocal/implocal.xsd");
                                }
                            }
                        }
                    } finally {
                        ((IDisposable)enumerator).Dispose();
                    }
                }
                this.Addenda = null;
                Comprobante.Serializer.Serialize(xmlWriter, this, xmlSerializerNamespace);
                memoryStream.Seek((long)0, SeekOrigin.Begin);
                using (StreamReader streamReader = new StreamReader(memoryStream, Encoding.UTF8)) {
                    end = streamReader.ReadToEnd();
                }
            }
            return end;
        }

        [XmlIgnore]
        public bool SelloValido {
            get {
                X509Certificate2 x509Certificate2 = new X509Certificate2();
                x509Certificate2.Import(Convert.FromBase64String(this.certificadoField));
                RSACryptoServiceProvider key = (RSACryptoServiceProvider)x509Certificate2.PublicKey.Key;
                bool selloValido = key.VerifyData(Encoding.UTF8.GetBytes(this.CadenaOriginal), CryptoConfig.MapNameToOID("SHA256"), Convert.FromBase64String(this.Sello));
                return selloValido;
            }
        }

        [XmlIgnore]
        public string CadenaOriginal {
            get {
                try {
                    string outOriginalString;
                    using (Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream("Jaeger.SAT.CFDI.xslt.cadenaoriginal_3_3.xslt")) {
                        if (manifestResourceStream == null) {
                            outOriginalString = null;
                        } else {
                            XmlDocument xmlDocument = new XmlDocument();
                            xmlDocument.Load(manifestResourceStream);
                            using (StringWriter stringWriter = new StringWriter()) {
                                using (XmlTextWriter xmlTextWriter = new XmlTextWriter(stringWriter)) {
                                    XslCompiledTransform xslCompiledTransform = new XslCompiledTransform();
                                    xslCompiledTransform.Load(xmlDocument);
                                    xslCompiledTransform.Transform(new XPathDocument(new StringReader(this.Serialize())), null, xmlTextWriter);
                                    outOriginalString = stringWriter.ToString().Replace("&amp;", "&");
                                }
                            }
                        }
                    }
                    return outOriginalString;
                } catch (Exception e) {
                    Console.WriteLine(e.Message);
                    throw;
                }

            }
        }

        [XmlIgnore]
        public string CadenaOriginalOff {
            get {
                string outOriginalString;
                using (Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream("Jaeger.SAT.CFDI.xslt.cadenaoriginal_3_3_offline.xslt")) {
                    if (manifestResourceStream == null) {
                        outOriginalString = null;
                    } else {
                        XmlDocument xmlDocument = new XmlDocument();
                        xmlDocument.Load(manifestResourceStream);
                        using (StringWriter stringWriter = new StringWriter()) {
                            using (XmlTextWriter xmlTextWriter = new XmlTextWriter(stringWriter)) {
                                XslCompiledTransform xslCompiledTransform = new XslCompiledTransform();
                                xslCompiledTransform.Load(xmlDocument, null, new XmlResolverService());
                                xslCompiledTransform.Transform(new XPathDocument(new StringReader(this.Serialize())), null, xmlTextWriter);
                                outOriginalString = stringWriter.ToString().Replace("&amp;", "&");
                            }
                        }
                    }
                }
                return outOriginalString;
            }
        }

        [XmlIgnore]
        public string CadenaOriginal2Off {
            get {
                string outOriginalString;
                using (Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream("Jaeger.SAT.CFDI.xslt.cadenaoriginal_3_3.xslt")) {
                    if (manifestResourceStream == null) {
                        outOriginalString = null;
                    } else {
                        XmlDocument xmlDocument = new XmlDocument();
                        xmlDocument.Load(manifestResourceStream);
                        using (StringWriter stringWriter = new StringWriter()) {
                            using (XmlTextWriter xmlTextWriter = new XmlTextWriter(stringWriter)) {
                                XslCompiledTransform xslCompiledTransform = new XslCompiledTransform();
                                xslCompiledTransform.Load(xmlDocument, null, new XmlResolverService());
                                xslCompiledTransform.Transform(new XPathDocument(new StringReader(this.OriginalXmlString)), null, xmlTextWriter);
                                outOriginalString = stringWriter.ToString().Replace("&amp;", "&");
                            }
                        }
                    }
                }
                return outOriginalString;
            }
        }

        #endregion
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    public partial class ComprobanteCfdiRelacionados {

        private ComprobanteCfdiRelacionadosCfdiRelacionado[] cfdiRelacionadoField;

        private string tipoRelacionField; //c_TipoRelacion

        /// <comentarios/>
        [XmlElementAttribute("CfdiRelacionado")]
        public ComprobanteCfdiRelacionadosCfdiRelacionado[] CfdiRelacionado {
            get {
                return this.cfdiRelacionadoField;
            }
            set {
                this.cfdiRelacionadoField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string TipoRelacion {
            get {
                return this.tipoRelacionField;
            }
            set {
                this.tipoRelacionField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    public partial class ComprobanteCfdiRelacionadosCfdiRelacionado {

        private string uUIDField;

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    public partial class ComprobanteEmisor {
        private string rfcField;

        private string nombreField;

        private string regimenFiscalField;

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Rfc {
            get {
                return this.rfcField;
            }
            set {
                this.rfcField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string RegimenFiscal {
            get {
                return this.regimenFiscalField;
            }
            set {
                this.regimenFiscalField = value;
            }
        }

        [XmlIgnore()]
        public int Id { get; set; }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    public partial class ComprobanteReceptor {
        private string rfcField;

        private string nombreField;

        private string residenciaFiscalField;

        private bool residenciaFiscalFieldSpecified;

        private string numRegIdTribField;

        private string usoCFDIField;

        /// <summary>
        /// Atributo requerido para precisar la Clave del Registro Federal de Contribuyentes correspondiente al contribuyente receptor del comprobante.
        /// </summary>
        [XmlAttributeAttribute()]
        public string Rfc {
            get {
                return this.rfcField;
            }
            set {
                this.rfcField = value;
            }
        }

        /// <summary>
        /// Atributo opcional para precisar el nombre, denominación o razón social del contribuyente receptor del comprobante.
        /// minLenght = 1, maxLenght = 254
        /// pattern value="([A-Z]|[a-z]|[0-9]| |Ñ|ñ|!|&quot;|%|&amp;|'|´|-|:|;|&gt;|=|&lt;|@|_|,|\{|\}|`|~|á|é|í|ó|ú|Á|É|Í|Ó|Ú|ü|Ü){1,254}"
        /// </summary>
        [XmlAttributeAttribute()]
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }

        /// <summary>
        /// Atributo condicional para registrar la clave del país de residencia para efectos fiscales del receptor del comprobante, cuando se trate de un extranjero, y que es conforme con la 
        /// especificación ISO 3166-1 alpha-3. Es requerido cuando se incluya el complemento de comercio exterior o se registre el atributo NumRegIdTrib.
        /// </summary>
        [XmlAttributeAttribute()]
        public string ResidenciaFiscal {
            get {
                return this.residenciaFiscalField;
            }
            set {
                this.residenciaFiscalField = value;
            }
        }

        [XmlIgnoreAttribute()]
        public bool ResidenciaFiscalSpecified {
            get {
                return this.residenciaFiscalFieldSpecified;
            }
            set {
                this.residenciaFiscalFieldSpecified = value;
            }
        }

        /// <summary>
        /// Atributo condicional para expresar el número de registro de identidad fiscal del receptor cuando sea residente en el  extranjero. Es requerido cuando se incluya el complemento de comercio exterior.
        /// minLenght = 1, maxLength = 40
        /// </summary>
        [XmlAttributeAttribute()]
        public string NumRegIdTrib {
            get {
                return this.numRegIdTribField;
            }
            set {
                this.numRegIdTribField = value;
            }
        }

        /// <summary>
        /// Atributo requerido para expresar la clave del uso que dará a esta factura el receptor del CFDI.
        /// </summary>
        [XmlAttributeAttribute()]
        public string UsoCFDI {
            get {
                return this.usoCFDIField;
            }
            set {
                this.usoCFDIField = value;
            }
        }

        [XmlIgnore()]
        public int Id { get; set; }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    public partial class ComprobanteImpuestos {
        private ComprobanteImpuestosRetencion[] retencionesField;

        private ComprobanteImpuestosTraslado[] trasladosField;

        private decimal totalImpuestosRetenidosField;

        private bool totalImpuestosRetenidosFieldSpecified;

        private decimal totalImpuestosTrasladadosField;

        private bool totalImpuestosTrasladadosFieldSpecified;

        /// <comentarios/>
        [XmlArrayItemAttribute("Retencion", IsNullable = false)]
        public ComprobanteImpuestosRetencion[] Retenciones {
            get {
                return this.retencionesField;
            }
            set {
                this.retencionesField = value;
            }
        }

        /// <comentarios/>
        [XmlArrayItemAttribute("Traslado", IsNullable = false)]
        public ComprobanteImpuestosTraslado[] Traslados {
            get {
                return this.trasladosField;
            }
            set {
                this.trasladosField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal TotalImpuestosRetenidos {
            get {
                return this.totalImpuestosRetenidosField;
            }
            set {
                this.totalImpuestosRetenidosField = value;
            }
        }

        /// <comentarios/>
        [XmlIgnoreAttribute()]
        public bool TotalImpuestosRetenidosSpecified {
            get {
                return this.totalImpuestosRetenidosFieldSpecified;
            }
            set {
                this.totalImpuestosRetenidosFieldSpecified = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal TotalImpuestosTrasladados {
            get {
                return this.totalImpuestosTrasladadosField;
            }
            set {
                this.totalImpuestosTrasladadosField = value;
            }
        }

        /// <comentarios/>
        [XmlIgnoreAttribute()]
        public bool TotalImpuestosTrasladadosSpecified {
            get {
                return this.totalImpuestosTrasladadosFieldSpecified;
            }
            set {
                this.totalImpuestosTrasladadosFieldSpecified = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    public partial class ComprobanteImpuestosRetencion {
        private string impuestoField; //c_Impuesto

        private decimal importeField;

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Impuesto {
            get {
                return this.impuestoField;
            }
            set {
                this.impuestoField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.sat.gob.mx/cfd/3")]
    public partial class ComprobanteImpuestosTraslado {
        private string impuestoField; // c_Impuesto

        private string tipoFactorField; // c_TipoFactor

        private decimal tasaOCuotaField;

        private decimal importeField;

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string Impuesto {
            get {
                return this.impuestoField;
            }
            set {
                this.impuestoField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public string TipoFactor {
            get {
                return this.tipoFactorField;
            }
            set {
                this.tipoFactorField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal TasaOCuota {
            get {
                return this.tasaOCuotaField;
            }
            set {
                this.tasaOCuotaField = value;
            }
        }

        /// <comentarios/>
        [XmlAttributeAttribute()]
        public decimal Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
    }
}

